name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: windows-2022

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Install dependencies in Backend
      - name: Install backend dependencies
        run: |
          git clone https://github.com/velevtzvetlin/express-mock-interview.git backend
          cd backend
          npm ci

      # Install dependencies in Frontend
      - name: Install frontend dependencies
        run: |
          git clone https://github.com/velevtzvetlin/fe-test-task.git frontend
          cd frontend
          npm ci

      # Run the backend server
      - name: Start backend server
        run: |
          cd backend
          npm start &
        shell: pwsh

      # Run the frontend server
      - name: Start frontend server
        run: |
          cd frontend
          npm run dev &
        shell: pwsh

      # Sleep for 20 seconds to ensure the servers are up and running
      - name: Wait for servers to start
        run: Start-Sleep -Seconds 20
        shell: pwsh

      # Install Cypress and Allure dependencies
      - name: Install Cypress and Allure dependencies
        run: |
          npm install -D @shelex/cypress-allure-plugin allure-commandline
          npx cypress install
        shell: pwsh

      # Run Cypress tests with Allure enabled
      - name: Run Cypress Tests with Allure
        run: npx cypress run --browser edge --env allure=true,allureResults=allure-results
        shell: pwsh

      # Generate Allure report if results are available
      - name: Generate Allure Report
        run: |
          mkdir -p allure-results allure-report
          if (Test-Path "allure-results" -and (Get-ChildItem "allure-results").Count -gt 0) {
            npx allure generate allure-results --clean -o allure-report
          } else {
            Write-Host "⚠️ Warning: No Allure results found! Skipping report generation."
            exit 0
          }
        shell: pwsh

      # Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      # Trigger another workflow using GitHub API
      - name: Trigger Allure Report Deployment Workflow
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-allure-report.yml/dispatches \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"ref":"main"}'
        shell: pwsh
